---
- name: Install and configure MongoDB 7.0
  hosts: all
  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
      become: true
      register: apt_update
      failed_when: apt_update is failed

    - name: Install dependencies
      apt:
        name: 
          - gnupg
          - curl
          - haveged
        state: present
      become: true
      register: deps_result
      failed_when: deps_result is failed

    - name: Ensure haveged is running for entropy
      service:
        name: haveged
        state: started
        enabled: yes
      become: true
      ignore_errors: yes

    # Option 1: Using get_url with validate_certs: no
    - name: Download MongoDB GPG key (with disabled SSL verification)
      get_url:
        url: https://www.mongodb.org/static/pgp/server-7.0.asc
        dest: /tmp/mongodb-server-7.0.asc
        mode: '0644'
        validate_certs: no
      become: true
      register: get_key
      failed_when: get_key is failed
      when: ansible_distribution == "Ubuntu" # Modify as needed for your OS

    # Option 2: Using uri module as an alternative
    - name: Download MongoDB GPG key (using uri module)
      uri:
        url: https://www.mongodb.org/static/pgp/server-7.0.asc
        method: GET
        return_content: yes
      become: true
      register: get_key
      failed_when: get_key.status != 200
      when: get_key is not defined # Fallback if the previous task fails

    - name: Save the MongoDB GPG key to a file
      copy:
        content: "{{ get_key.content }}"
        dest: /tmp/mongodb-server-7.0.asc
        mode: '0644'
      become: true
      when: get_key.content is defined

    # Option 3: Using a local file as fallback
    - name: Copy MongoDB GPG key from local file
      copy:
        src: files/mongodb-server-7.0.asc
        dest: /tmp/mongodb-server-7.0.asc
        mode: '0644'
      become: true
      when: get_key is not defined and ansible_failed_tasks is defined

    - name: Dearmor MongoDB GPG key
      shell: gpg --batch --yes -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor /tmp/mongodb-server-7.0.asc
      args:
        creates: /usr/share/keyrings/mongodb-server-7.0.gpg
      become: true
      register: gpg_result
      failed_when: gpg_result is failed

    - name: Remove incorrect MongoDB repository file
      file:
        path: /etc/apt/sources.list.d/mongodb-org-7.0.list
        state: absent
      become: true

    - name: Add MongoDB repository (using jammy repo for Ubuntu 24.04)
      shell: echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list
      become: true
      register: repo_result
      failed_when: repo_result is failed

    - name: Update package lists
      apt:
        update_cache: yes
      become: true
      register: apt_update_after_repo
      retries: 3
      delay: 5
      until: apt_update_after_repo is success

    - name: Install MongoDB packages
      apt:
        name: mongodb-org
        state: present
      become: true
      register: mongodb_install
      failed_when: mongodb_install is failed

    - name: Start MongoDB service
      service:
        name: mongod
        state: started
      become: true
      register: start_result
      failed_when: start_result is failed

    - name: Enable MongoDB service to start on boot
      service:
        name: mongod
        enabled: yes
      become: true
      register: enable_result
      failed_when: enable_result is failed

    - name: Verify MongoDB installation
      command: mongod --version
      become: true
      register: version_check
      changed_when: false
      failed_when: false

    - block:
        - name: Create MongoDB configuration
          template:
            src: mongod.conf.j2
            dest: /etc/mongod.conf
            owner: root
            group: root
            mode: 0644
          notify: restart mongodb

        - name: Add MongoDB directories
          file:
            state: directory
            path: "{{ item }}"
            owner: "{{ mongodb_user }}"
            group: "{{ mongodb_group }}"
            mode: 0755
          with_items:
            - "{{ mongodb_dbpath }}"
            - "{{ mongodb_security_path }}"
            - "{{ mongodb_logpath | dirname }}"

        - name: Set appropriate permissions on data directory
          file:
            path: "{{ mongodb_dbpath }}"
            state: directory
            owner: "{{ mongodb_user }}"
            group: "{{ mongodb_group }}"
            mode: 0750
            recurse: yes

        - name: Copy MongoDB PEM file for TLS
          copy:
            dest: "{{ mongodb_pem_path }}"
            owner: "{{ mongodb_user }}"
            group: "{{ mongodb_group }}"
            mode: 0600
            src: "{{ mongodb_pem }}"
          notify: restart mongodb
          when: mongodb_pem is defined

        - name: Copy MongoDB replication keyfile
          copy:
            dest: "{{ mongodb_keyfile_path }}"
            owner: "{{ mongodb_user }}"
            group: "{{ mongodb_group }}"
            mode: 0600
            src: "{{ mongodb_keyfile }}"
          notify: restart mongodb
          when: mongodb_keyfile is defined

        - name: Copy MongoDB service file
          copy:
            dest: "{{ mongodb_servicefile_path }}"
            owner: "root"
            group: "root"
            mode: 0644
            src: "{{ mongodb_servicefile }}"
          notify: restart mongodb

        - name: Reload systemd after service file changes
          systemd:
            daemon_reload: yes

        - name: Enable and start MongoDB service
          service:
            name: "{{ mongodb_service_name }}"
            enabled: yes
            state: started

        - meta: flush_handlers

        - name: Show MongoDB verification results
          debug:
            msg: "MongoDB installation verified successfully. Version: {{ version_check.stdout_lines[0] if version_check.rc == 0 else 'MongoDB verification failed!' }}"

        - name: Get MongoDB service status
          command: systemctl status mongod
          become: true
          register: status_result
          changed_when: false

        - name: Show MongoDB service status
          debug:
            msg: "{{ status_result.stdout_lines }}"

      become: true
      become_method: sudo
      tags:
        - mongodb-7.0