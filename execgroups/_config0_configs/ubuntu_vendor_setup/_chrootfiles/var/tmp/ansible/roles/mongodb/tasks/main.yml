---
- name: Update system packages
  apt:
    update_cache: yes
  become: true
  register: apt_update
  failed_when: apt_update is failed

- name: Install dependencies
  apt:
    name: 
      - gnupg
      - curl
      - haveged
    state: present
  become: true
  register: deps_result
  failed_when: deps_result is failed

- name: Ensure haveged is running for entropy
  service:
    name: haveged
    state: started
    enabled: yes
  become: true
  ignore_errors: yes

- name: Download MongoDB GPG key (with disabled SSL verification)
  get_url:
    url: https://www.mongodb.org/static/pgp/server-7.0.asc
    dest: /tmp/mongodb-server-7.0.asc
    mode: '0644'
    validate_certs: no
  become: true
  register: get_key
  failed_when: get_key is failed
  when: ansible_distribution == "Ubuntu"

- name: Alternative - Download MongoDB GPG key (using uri module)
  uri:
    url: https://www.mongodb.org/static/pgp/server-7.0.asc
    method: GET
    return_content: yes
    validate_certs: no
  become: true
  register: get_key_uri
  failed_when: get_key_uri.status != 200
  when: get_key is failed

- name: Save the MongoDB GPG key to a file (from uri method)
  copy:
    content: "{{ get_key_uri.content }}"
    dest: /tmp/mongodb-server-7.0.asc
    mode: '0644'
  become: true
  when: get_key is failed and get_key_uri is success

- name: Fallback - Copy MongoDB GPG key from local file
  copy:
    src: files/mongodb-server-7.0.asc
    dest: /tmp/mongodb-server-7.0.asc
    mode: '0644'
  become: true
  when: (get_key is failed or get_key is not defined) and 
        (get_key_uri is failed or get_key_uri is not defined)

- name: Dearmor MongoDB GPG key
  shell: gpg --batch --yes -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor /tmp/mongodb-server-7.0.asc
  args:
    creates: /usr/share/keyrings/mongodb-server-7.0.gpg
  become: true
  register: gpg_result
  failed_when: gpg_result is failed

- name: Remove incorrect MongoDB repository file
  file:
    path: /etc/apt/sources.list.d/mongodb-org-7.0.list
    state: absent
  become: true

- name: Add MongoDB repository
  shell: echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release }}/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list
  become: true
  register: repo_result
  failed_when: repo_result is failed

- name: Update package lists
  apt:
    update_cache: yes
  become: true
  register: apt_update_after_repo
  retries: 3
  delay: 5
  until: apt_update_after_repo is success

- name: Install MongoDB packages
  apt:
    name: mongodb-org
    state: present
  become: true
  register: mongodb_install
  failed_when: mongodb_install is failed

- name: Create MongoDB configuration
  template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart mongodb

- name: Add MongoDB directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    mode: 0755
  with_items:
    - "{{ mongodb_dbpath }}"
    - "{{ mongodb_security_path }}"
    - "{{ mongodb_logpath | dirname }}"
  become: true

- name: Set appropriate permissions on data directory
  file:
    path: "{{ mongodb_dbpath }}"
    state: directory
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    mode: 0750
    recurse: yes
  become: true

- name: Copy MongoDB PEM file for TLS
  copy:
    dest: "{{ mongodb_pem_path }}"
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    mode: 0600
    src: "{{ mongodb_pem }}"
  notify: restart mongodb
  become: true
  when: mongodb_pem is defined and mongodb_pem

- name: Copy MongoDB replication keyfile
  copy:
    dest: "{{ mongodb_keyfile_path }}"
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    mode: 0600
    src: "{{ mongodb_keyfile }}"
  notify: restart mongodb
  become: true
  when: mongodb_keyfile is defined and mongodb_keyfile

- name: Copy MongoDB service file
  copy:
    dest: "{{ mongodb_servicefile_path }}"
    owner: "root"
    group: "root"
    mode: 0644
    src: "{{ mongodb_servicefile }}"
  notify: restart mongodb
  become: true
  when: mongodb_servicefile is defined and mongodb_servicefile

- name: Reload systemd after service file changes
  systemd:
    daemon_reload: yes
  become: true

- name: Enable and start MongoDB service
  service:
    name: "{{ mongodb_service_name }}"
    enabled: yes
    state: started
  become: true

- name: Verify MongoDB installation
  command: mongod --version
  become: true
  register: version_check
  changed_when: false
  failed_when: false

- name: Show MongoDB verification results
  debug:
    msg: "MongoDB installation verified successfully. Version: {{ version_check.stdout_lines[0] if version_check.rc == 0 else 'MongoDB verification failed!' }}"

- name: Get MongoDB service status
  command: systemctl status mongod
  become: true
  register: status_result
  changed_when: false
  failed_when: false

- name: Show MongoDB service status
  debug:
    msg: "{{ status_result.stdout_lines }}"